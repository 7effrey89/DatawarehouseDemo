{
	"name": "fctSalesOrder",
	"properties": {
		"folder": {
			"name": "JDEE1/Facts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureTable1",
						"type": "DatasetReference"
					},
					"name": "dimProduct"
				},
				{
					"dataset": {
						"referenceName": "AzureTable1",
						"type": "DatasetReference"
					},
					"name": "dimCustomer"
				},
				{
					"dataset": {
						"referenceName": "AzureTable1",
						"type": "DatasetReference"
					},
					"name": "vSalesOrderDetailFile"
				}
			],
			"sinks": [
				{
					"name": "fctSALESORDER"
				}
			],
			"transformations": [
				{
					"name": "JoinProduct"
				},
				{
					"name": "JoinShipCustomer"
				},
				{
					"name": "ADDRESSNUMBERSHIPTO"
				},
				{
					"name": "ADDRESSNUMBER"
				},
				{
					"name": "JoinBillCustomer"
				},
				{
					"name": "Transformation"
				},
				{
					"name": "Product"
				},
				{
					"name": "columnFilter"
				},
				{
					"name": "RenameColumnNames"
				},
				{
					"name": "filterAwayNulls",
					"description": "I identified the dimension Customer was wwas filtering away certain customerID keys needed for this fact. The fact didn't allow nulls so using this to continue\n"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimProduct",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimCustomer",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> vSalesOrderDetailFile",
				"columnFilter, Product join(IDENTIFIER2NDITEM == PRODUCTID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinProduct",
				"JoinProduct, ADDRESSNUMBERSHIPTO join(ADDRESSNUMBERSHIPTO == CUSTOMERID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinShipCustomer",
				"dimCustomer select(mapColumn(",
				"          SK_DIMCUSTOMER,",
				"          CUSTOMERID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ADDRESSNUMBERSHIPTO",
				"dimCustomer select(mapColumn(",
				"          SK_DIMCUSTOMER,",
				"          CUSTOMERID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ADDRESSNUMBER",
				"JoinShipCustomer, ADDRESSNUMBER join(ADDRESSNUMBER == ADDRESSNUMBER@CUSTOMERID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinBillCustomer",
				"JoinBillCustomer derive(SALESORDERID = concat(toString(DOCUMENTORDERINVOICEE),ORDERTYPE,COMPANYKEYORDERNO),",
				"          SALESORDERLINEID = concat(toString(DOCUMENTORDERINVOICEE),ORDERTYPE,COMPANYKEYORDERNO,toString(LINENUMBER)),",
				"          TRANSACTIONPERIODDATEID = addMonths(addDays(lastDayOfMonth(DATETRANSACTIONJULIAN_DATE),1),-1),",
				"          REQUESTPERIODDATEID = addMonths(addDays(lastDayOfMonth(DATEREQUESTEDJULIAN_DATE),1),-1),",
				"          DELIVERYPERIODDATEID = addMonths(addDays(lastDayOfMonth(DATERELEASEJULIAN_DATE),1),-1),",
				"          SHIPMENTPERIODDATEID = addMonths(addDays(lastDayOfMonth(DATEPROMISEDSHIPJU_DATE),1),-1),",
				"          INVOICEPERIODDATEID = addMonths(addDays(lastDayOfMonth(DATEINVOICEJULIAN_DATE),1),-1),",
				"          GLPERIODDATEID = addMonths(addDays(lastDayOfMonth(DTFORGLANDVOUCH1_DATE),1),-1),",
				"          ISSAMPLE = iif(   UNITSQUANTITYSHIPPED > 0    && AMOUNTEXTENDEDPRICE == 0    && AMOUNTFOREIGNEXTPRICE == 0    , 1   , 0 ),",
				"          ISQUANTITYFIX = iif(   LINETYPE == 'N'    || LINETYPE == 'CB'    || LINETYPE == 'DB'   , 1   , 0 ),",
				"          each(match(right(name,11)=='JULIAN_DATE'||right(name,11)=='SHIPJU_DATE'), concat($$, '_awesome') = addMonths(addDays(lastDayOfMonth($$),1),-1))) ~> Transformation",
				"dimProduct select(mapColumn(",
				"          SK_DIMPRODUCT,",
				"          PRODUCTID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Product",
				"vSalesOrderDetailFile select(mapColumn(",
				"          each(match(in(['LAST_UPDATED_TS','SRC_DELETED_FLG','AMTPRICEPERUNIT2','AMOUNTEXTENDEDPRICE','DATETRANSACTIONJULIAN_DATE','AMOUNTEXTENDEDCOST','AMTFORPRICEPERUNIT','AMOUNTFOREIGNEXTPRICE','AMOUNTFOREIGNEXTCOST','UNITSTRANSACTIONQTY','UNITSPRIMARYQTYORDER','UNITSSECONDARYQTYOR','UNITSQUANTITYSHIPPED','LINETYPE','STATUSCODENEXT','HOLDORDERSCODE','UNITOFMEASUREASINPUT','UNITOFMEASUREPRIMARY','UNITOFMEASURESECONDARY','UNITOFMEASUREPRICING','CURRENCYCODEFROM','ADDRESSNUMBER','ADDRESSNUMBERSHIPTO','COSTCENTER','LOCATION','DTFORGLANDVOUCH1_DATE','DATERELEASEJULIAN_DATE','DATEPROMISEDSHIPJU_DATE','DATEINVOICEJULIAN_DATE','ATETRANSACTIONJULIAN_DATE','DATEREQUESTEDJULIAN_DATE','IDENTIFIER2NDITEM','ADDRESSNUMBERSHIPTO','ADDRESSNUMBER','DOCUMENTORDERINVOICEE','ORDERTYPE','COMPANYKEYORDERNO','LINENUMBER','AMOUNTFOREIGNEXTPRICE','AMOUNTEXTENDEDPRICE','UNITSQUANTITYSHIPPED','LINETYPE'],name)))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> columnFilter",
				"Transformation select(mapColumn(",
				"          SK_DIMPRODUCT,",
				"          SK_SHIPTOCUSTOMERLEVELID = ADDRESSNUMBERSHIPTO@SK_DIMCUSTOMER,",
				"          SK_BILLTOCUSTOMERLEVELID = ADDRESSNUMBER@SK_DIMCUSTOMER,",
				"          SALESORDERID,",
				"          SALESORDERLINEID,",
				"          TRANSACTIONDATEID = DATETRANSACTIONJULIAN_DATE,",
				"          TRANSACTIONPERIODDATEID,",
				"          REQUESTDATEID = DATEREQUESTEDJULIAN_DATE,",
				"          REQUESTPERIODDATEID,",
				"          DELIVERYDATEID = DATERELEASEJULIAN_DATE,",
				"          DELIVERYPERIODDATEID,",
				"          SHIPMENTDATEID = DATEPROMISEDSHIPJU_DATE,",
				"          SHIPMENTPERIODDATEID,",
				"          INVOICEDATEID = DATEINVOICEJULIAN_DATE,",
				"          INVOICEPERIODDATEID,",
				"          GLDATEID = DTFORGLANDVOUCH1_DATE,",
				"          GLPERIODDATEID,",
				"          LINETYPEID = LINETYPE,",
				"          STATUSCODENEXTID = STATUSCODENEXT,",
				"          HOLDCODE = HOLDORDERSCODE,",
				"          ORDERUOMID = UNITOFMEASUREASINPUT,",
				"          PRIMARYUOMID = UNITOFMEASUREPRIMARY,",
				"          SECONDARYUOMID = UNITOFMEASURESECONDARY,",
				"          PRICINGUOMID = UNITOFMEASUREPRICING,",
				"          CURRENCYFOREIGNID = CURRENCYCODEFROM,",
				"          BILLTOCUSTOMERID = ADDRESSNUMBER,",
				"          SHIPTOCUSTOMERID = ADDRESSNUMBERSHIPTO,",
				"          BUSINESSUNITID = COSTCENTER,",
				"          LOCATIONID = LOCATION,",
				"          ISSAMPLE,",
				"          ISQUANTITYFIX,",
				"          UNITPRICEDOMESTIC = AMTPRICEPERUNIT2,",
				"          SALESPRICEDOMESTIC = AMOUNTEXTENDEDPRICE,",
				"          COGSDOMESTIC = AMOUNTEXTENDEDCOST,",
				"          UNITPRICEFOREIGN = AMTFORPRICEPERUNIT,",
				"          SALESPRICEFOREIGN = AMOUNTFOREIGNEXTPRICE,",
				"          COGSFOREIGN = AMOUNTFOREIGNEXTCOST,",
				"          ORDERQUANTITY = UNITSTRANSACTIONQTY,",
				"          ORDERQUANTITYPRIMARY = UNITSPRIMARYQTYORDER,",
				"          ORDERQUANTITYSECONDARY = UNITSSECONDARYQTYOR,",
				"          SHIPPEDQUANTITY = UNITSQUANTITYSHIPPED,",
				"          LAST_UPDATED_TS,",
				"          SRC_DELETED_FLG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumnNames",
				"RenameColumnNames filter(!isNull(SK_DIMPRODUCT)&&!isNull(SK_SHIPTOCUSTOMERLEVELID)&&!isNull(SK_BILLTOCUSTOMERLEVELID)&&!isNull(SALESORDERID)&&!isNull(SALESORDERLINEID)) ~> filterAwayNulls",
				"filterAwayNulls sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'table') ~> fctSALESORDER"
			]
		}
	}
}