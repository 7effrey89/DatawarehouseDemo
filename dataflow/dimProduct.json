{
	"name": "dimProduct",
	"properties": {
		"folder": {
			"name": "JDEE1/Dimensions"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureTable1",
						"type": "DatasetReference"
					},
					"name": "ITEMMASTER"
				},
				{
					"dataset": {
						"referenceName": "AzureTable1",
						"type": "DatasetReference"
					},
					"name": "USERDEFINEDCODEVALUES"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureTable1",
						"type": "DatasetReference"
					},
					"name": "tmpDIMPRODUCT"
				}
			],
			"transformations": [
				{
					"name": "UDC07"
				},
				{
					"name": "filter1"
				},
				{
					"name": "SelectRelevantColumns"
				},
				{
					"name": "transformation"
				},
				{
					"name": "TRIM"
				},
				{
					"name": "UDCS3"
				},
				{
					"name": "UDC10"
				},
				{
					"name": "UDCP1"
				},
				{
					"name": "UDCS4"
				},
				{
					"name": "UDCP4"
				},
				{
					"name": "UserDefinedCodes10"
				},
				{
					"name": "UserDefinedCodesS4"
				},
				{
					"name": "UserDefinedCodesP1"
				},
				{
					"name": "UserDefinedCodesP4"
				},
				{
					"name": "transformation2"
				},
				{
					"name": "renaming"
				},
				{
					"name": "U07"
				},
				{
					"name": "US3"
				},
				{
					"name": "UserDefinedCodes07"
				},
				{
					"name": "UserDefinedCodesS3"
				},
				{
					"name": "UP4"
				},
				{
					"name": "UP1"
				},
				{
					"name": "US4"
				},
				{
					"name": "U10"
				}
			],
			"scriptLines": [
				"parameters{",
				"     lastLoad as string (\"1900-01-01\")",
				"}",
				"source(output(",
				"          ORDERPOLICYVALUE as decimal(15,0),",
				"          ACCTINGCOSTQTY as decimal(15,0),",
				"          MFGLEADTIMEQTY as decimal(15,0),",
				"          LEADTIMEPERUNIT as decimal(5,0),",
				"          PLANTIMEFENCERULE as string,",
				"          FIXEDVARIABLELEADTIME as string,",
				"          ISSUETYPECODE as string,",
				"          ORDERWITHYN as string,",
				"          PLANNINGTIMEFENCEDAYS as decimal(5,0),",
				"          FREEZETIMEFENCEDAYS as decimal(5,0),",
				"          MSGTIMEFENCEDAYS as decimal(5,0),",
				"          TIMEFENCE4 as decimal(5,0),",
				"          TIMEFENCE5 as decimal(5,0),",
				"          EXPEDITEDAMPERDAYS as decimal(5,0),",
				"          DEFERDAMPERDAYS as decimal(5,0),",
				"          SAFETYLEADTIME as decimal(5,0),",
				"          MAKEBUYCODE as string,",
				"          COPRODUCTSBYPRODUCTS as string,",
				"          LOWLEVELCODE as decimal(3,0),",
				"          ALLOCATEBYLOT as string,",
				"          COMMITMENTSPECIFICDAYS as decimal(3,0),",
				"          USERRESERVEDCODE as string,",
				"          USERRESERVEDDATE as decimal(18,0),",
				"          USERRESERVEDAMOUNT as decimal(15,0),",
				"          USERRESERVEDNUMBER as decimal(8,0),",
				"          USERRESERVEDREFERENCE as string,",
				"          USERID as string,",
				"          PROGRAMID as string,",
				"          WORKSTATIONID as string,",
				"          DATEUPDATED as decimal(18,0),",
				"          TIMEOFDAY as string,",
				"          UPCNUMBER as string,",
				"          AGGREGATESCCCODEPI0 as string,",
				"          UNITOFMEASUREUPC as string,",
				"          UNITOFMEASUREAGGREGATEUPC as string,",
				"          UNITOFMEASURESCCPI0 as string,",
				"          UNITOFMEASURESCCPI1 as string,",
				"          UNITOFMEASURESCCPI2 as string,",
				"          UNITOFMEASURESCCPI3 as string,",
				"          UNITOFMEASURESCCPI4 as string,",
				"          UNITOFMEASURESCCPI5 as string,",
				"          UNITOFMEASURESCCPI6 as string,",
				"          UNITOFMEASURESCCPI7 as string,",
				"          UNITOFMEASURESCCPI8 as string,",
				"          PAYONCONSUMPTION as string,",
				"          AVERAGEQUEUETIMEHOURS as decimal(15,0),",
				"          PALLETTYPE as string,",
				"          ITEMWEIGHTREQUIRED as string,",
				"          TEMPLATE as string,",
				"          SEGMENT1 as string,",
				"          SEGMENT2 as string,",
				"          SEGMENT3 as string,",
				"          SEGMENT4 as string,",
				"          SEGMENT5 as string,",
				"          SEGMENT6 as string,",
				"          SEGMENT7 as string,",
				"          SEGMENT8 as string,",
				"          SEGMENT9 as string,",
				"          SEGMENT10 as string,",
				"          MATRIXCONTROLLED as string,",
				"          ACTIVEINGREDIENTFLAG as string,",
				"          BESTBEFOREDEFAULTDAYS as decimal(6,0),",
				"          COMMITMENTDATEMETHOD as string,",
				"          LOTEXPIRATIONDATECALCULATIONMETHOD as string,",
				"          LOTEFFECTIVEDEFAULTDAYS as decimal(6,0),",
				"          PURCHASINGEFFECTIVEDAYS as decimal(6,0),",
				"          SELLBYDEFAULTDAYS as decimal(6,0),",
				"          USERLOTDATE1DEFAULTDAYS as decimal(6,0),",
				"          USERLOTDATE2DEFAULTDAYS as decimal(6,0),",
				"          USERLOTDATE3DEFAULTDAYS as decimal(6,0),",
				"          USERLOTDATE4DEFAULTDAYS as decimal(6,0),",
				"          USERLOTDATE5DEFAULTDAYS as decimal(6,0),",
				"          DUALTOLERANCE as decimal(7,0),",
				"          DUALPICKINGPROCESSOPTION as string,",
				"          DUALUNITOFMEASUREITEM as string,",
				"          CROSSDOCKFLAG as string,",
				"          LOTAUDITFLAG as string,",
				"          SPECIALLOTFORMAT as string,",
				"          RESTRICTWOLOTASSIGNMENT as string,",
				"          LOTNUMBERPREASIGNMENT as string,",
				"          LOTSTATUSCODEEXPANDED as string,",
				"          CONSTRAINTSFLAG as string,",
				"          APSPLANNINGUOM as string,",
				"          CONSUMABLE as string,",
				"          COMPOSITION as string,",
				"          PRIORITYONEALERTLEVEL as decimal(15,0),",
				"          PRIORITYTWOALERTLEVEL as decimal(15,0),",
				"          ALLOWSHIPPINGHELDLOTS as string,",
				"          VENDORMANAGEDINVENTORY as string,",
				"          METHODOFCOSTCALCULA as string,",
				"          EXPLODEITEM10 as string,",
				"          MINOPERATIONALTHRESHOLD as decimal(15,0),",
				"          MINCUMULATIVETHRESHOLD as decimal(15,0),",
				"          OPERATIONALTHRESHOLDUOM as string,",
				"          LEANFLAG as string,",
				"          LINEIDENTIFIER as string,",
				"          TOTALPRODUCTCYCLETIME as decimal(20,0),",
				"          KANBANITEM as string,",
				"          DFENDITEMFLAG as string,",
				"          KANBANEXPLODETOLOWERLEVEL as string,",
				"          SELLABLE as string,",
				"          MAXOPERATIONALTHRESHOLD as decimal(15,0),",
				"          MAXCUMULATIVETHRESHOLD as decimal(15,0),",
				"          CUMULATIVETHRESHOLDUOM as string,",
				"          ATPRULENAME as string,",
				"          CHECKATP as string,",
				"          ATPCOMPONENTS as string,",
				"          COUNTRYOFORIGINREQUIRED as string,",
				"          ATOFORECASTCONTROL as string,",
				"          PRODUCTIONNUMBERCONTROLLED as string,",
				"          IDENTIFIERSHORTITEM as decimal(8,0),",
				"          IDENTIFIER2NDITEM as string,",
				"          IDENTIFIER3RDITEM as string,",
				"          DESCRIPTIONLINE1 as string,",
				"          DESCRIPTIONLINE2 as string,",
				"          SEARCHTEXT as string,",
				"          SEARCHTEXTCOMPRESSED as string,",
				"          SALESREPORTINGCODE1 as string,",
				"          SALESREPORTINGCODE2 as string,",
				"          SALESREPORTINGCODE3 as string,",
				"          SALESREPORTINGCODE4 as string,",
				"          SALESREPORTINGCODE5 as string,",
				"          SALESREPORTINGCODE6 as string,",
				"          SALESREPORTINGCODE7 as string,",
				"          SALESREPORTINGCODE8 as string,",
				"          SALESREPORTINGCODE9 as string,",
				"          SALESREPORTINGCODE10 as string,",
				"          PURCHASINGREPORTCODE1 as string,",
				"          PURCHASINGREPORTCODE2 as string,",
				"          PURCHASINGREPORTCODE3 as string,",
				"          PURCHASINGREPORTCODE4 as string,",
				"          PURCHASINGREPORTCODE5 as string,",
				"          PURCHREPORTINGCODE6 as string,",
				"          PURCHREPORTINGCODE7 as string,",
				"          PURCHREPORTINGCODE8 as string,",
				"          PURCHREPORTINGCODE9 as string,",
				"          PURCHREPORTINGCODE10 as string,",
				"          COMMODITYCODE as string,",
				"          PRODUCTGROUPFROM as string,",
				"          DISPATCHGRP as string,",
				"          PRICINGCATEGORY as string,",
				"          REPRICEBASKETPRICECAT as string,",
				"          ORDERREPRICECATEGORY as string,",
				"          BUYER as decimal(8,0),",
				"          DRAWINGNUMBER as string,",
				"          REVISIONNUMBER as string,",
				"          DRAWINGSIZE as string,",
				"          VOLUMECUBICDIMENSIONS as decimal(15,0),",
				"          CARRIER as decimal(8,0),",
				"          PREFERCARRIERPURCHASIN as decimal(8,0),",
				"          SHIPPINGCONDITIONSCODE as string,",
				"          SHIPPINGCOMMODITYCLASS as string,",
				"          UNITOFMEASUREPRIMARY as string,",
				"          UNITOFMEASURESECONDARY as string,",
				"          UNITOFMEASUREPURCHAS as string,",
				"          UNITOFMEASUREPRICING as string,",
				"          UNITOFMEASURESHIPPING as string,",
				"          UNITOFMEASUREPRODUCTION as string,",
				"          UNITOFMEASUREALLOCATION as string,",
				"          UNITOFMEASUREWEIGHT as string,",
				"          UNITOFMEASUREVOLUME as string,",
				"          UNITOFMEASURESTOCKI as string,",
				"          UNITOFMEASUREVOLUMEORWEI as string,",
				"          CYCLECOUNTCATEGORY as string,",
				"          GLCATEGORY as string,",
				"          PRICELEVEL as string,",
				"          LEVELPURCHASINGPRICE as string,",
				"          COSTLEVEL as string,",
				"          POTENCYPRICING as string,",
				"          CHECKAVAILABILITYYN as string,",
				"          BULKPACKEDFLAG as string,",
				"          LAYERCODESOURCE as string,",
				"          CONSTANTFUTUREUSE1 as string,",
				"          CONSTANTFUTUREUSE2 as string,",
				"          STANDARDPOTENCY as decimal(7,0),",
				"          FROMPOTENCY as decimal(7,0),",
				"          THRUPOTENCY as decimal(7,0),",
				"          STANDARDGRADE as string,",
				"          FROMGRADE as string,",
				"          THRUGRADE as string,",
				"          COMPONENTTYPE as string,",
				"          STOCKINGTYPE as string,",
				"          LINETYPE as string,",
				"          CONTRACTITEM as string,",
				"          BACKORDERSALLOWEDYN as string,",
				"          ITEMFLASHMESSAGE as string,",
				"          TEMPORARYITEMFLASHMESSAG as string,",
				"          PRINTMESSAGE1 as string,",
				"          ABCCODE1SALESINV as string,",
				"          ABCCODE2MARGININV as string,",
				"          ABCCODE3INVESTINV as string,",
				"          ABCCODEOVERRIDEINDICA as string,",
				"          TYPEWARRANTY as string,",
				"          COMMISSIONCATEGORY as string,",
				"          SERIALNUMBERREQUIRED as string,",
				"          METHODOFPRICECALCULA as string,",
				"          FIFOPROCESSING as string,",
				"          LOTSTATUSCODE as string,",
				"          SHELFLIFEDAYS as decimal(6,0),",
				"          ADDRESSNUMBERPLANNER as decimal(8,0),",
				"          PLANNINGCODE as string,",
				"          PERCENTMARGIN as decimal(7,0),",
				"          MARGINMAINTENANCEPER as decimal(7,0),",
				"          PARTSTATUSCODE as string,",
				"          STOCKNONSTOCK as string,",
				"          LEADTIMELEVEL as decimal(5,0),",
				"          LEADTIMEMFG as decimal(5,0),",
				"          LEADTIMECUM as decimal(5,0),",
				"          ORDERPOLICYCODE as string,",
				"          USERRESERVEDDATE_DATE as date,",
				"          USERRESERVEDDATE_YM as string,",
				"          DATEUPDATED_DATE as date,",
				"          DATEUPDATED_YM as string,",
				"          IDENTIFIERSHORTITEM_TRIM as string,",
				"          SRC_DELETED_FLG as string,",
				"          LAST_UPDATED_TS as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: (\"SELECT * FROM SRC_JDEE1.VITEMMASTER WHERE LAST_UPDATED_TS > cast( '{$lastLoad}' as datetime)\"),",
				"     format: 'query') ~> ITEMMASTER",
				"source(output(",
				"          {__IQ4BIS_PARTITIONKEY} as string,",
				"          USERDEFINEDCODES as string,",
				"          USERDEFINEDCODE as string,",
				"          DESCRIPTION001 as string,",
				"          DESCRIPTION01002 as string,",
				"          SPECIALHANDLINGCODE as string,",
				"          UDCOWNERSHIPFLAG as string,",
				"          HARDCODEDYN as string,",
				"          USERID as string,",
				"          PROGRAMID as string,",
				"          DATEUPDATED as decimal(6,0),",
				"          WORKSTATIONID as string,",
				"          TIMELASTUPDATED as timestamp,",
				"          PRODUCTCODE as string,",
				"          PRODUCTCODE_TRIM as string,",
				"          USERDEFINEDCODE_TRIM as string,",
				"          USERDEFINEDCODES_TRIM as string,",
				"          DATEUPDATED_DATE as date,",
				"          DATEUPDATED_YM as string,",
				"          SRC_DELETED_FLG as string,",
				"          LAST_UPDATED_TS as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select * from SRC_JDEE1.VUSERDEFINEDCODEVALUES',",
				"     format: 'query') ~> USERDEFINEDCODEVALUES",
				"filter1, U07 join(SALESREPORTINGCODE7 == USERDEFINEDCODES,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> UDC07",
				"TRIM filter(in(['FG','BM','PI','IM','OS','PM','RM','OX','NS','CK','CM','EN','SA','QG'], PURCHASINGREPORTCODE1)) ~> filter1",
				"ITEMMASTER select(mapColumn(",
				"          each(match(in(['IDENTIFIER2NDITEM','IDENTIFIERSHORTITEM','DESCRIPTIONLINE1','DESCRIPTIONLINE2','SEARCHTEXT','STOCKINGTYPE','STOCKINGTYPE','UNITOFMEASUREPRIMARY','UNITOFMEASURESECONDARY','GLCATEGORY','DISPATCHGRP','SALESREPORTINGCODE3','SALESREPORTINGCODE3','PURCHASINGREPORTCODE1','SALESREPORTINGCODE4','SALESREPORTINGCODE7','SALESREPORTINGCODE10','PURCHASINGREPORTCODE4','IDENTIFIER2NDITEM','SALESREPORTINGCODE10','STOCKINGTYPE','PURCHASINGREPORTCODE1','LAST_UPDATED_TS','SRC_DELETED_FLG'],name)))",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRelevantColumns",
				"UDCP4 derive(STRATEGICCATEGORY = iif(in(['30','35'],SALESREPORTINGCODE3),\"FDF\",UserDefinedCodes07@DESCRIPTION001),",
				"          ISACTIVE = iif(in(['O','U','I'], STOCKINGTYPE),0,1),",
				"          MANUFACTURINGFAMILYUOMID = UserDefinedCodesS3@SPECIALHANDLINGCODE,",
				"          PRODUCTTYPE = UserDefinedCodes07@DESCRIPTION001,",
				"          ISSTERILE = UserDefinedCodes10@SPECIALHANDLINGCODE,",
				"          COMMODITYCLASS = UserDefinedCodesP1@DESCRIPTION001,",
				"          ACTIVEINGREDIENT = UserDefinedCodesS4@DESCRIPTION001,",
				"          MANUFACTURINGFAMILY = UserDefinedCodes07@DESCRIPTION001,",
				"          QUALITYGROUP = UserDefinedCodes10@DESCRIPTION001,",
				"          MASTERPLANNINGFAMILY = UserDefinedCodesP4@DESCRIPTION001,",
				"          PRODUCTFILTER = iif(like(IDENTIFIER2NDITEM, '102%[A-Z]%') || like(IDENTIFIER2NDITEM, '104%[A-Z]%') || like(IDENTIFIER2NDITEM, '107%[A-Z]%') || like(IDENTIFIER2NDITEM, '144%[A-Z]%'), 0, 1),",
				"          QUALITYGROUPFILTER = iif(!isNull(SALESREPORTINGCODE10) && SALESREPORTINGCODE10 != 'OTH', 1, 0),",
				"          STOCKINGTYPEFILTER = iif(!isNull(STOCKINGTYPE) && STOCKINGTYPE != 'O', 1, 0),",
				"          COMMODITYCLASSFILTER = iif(in(['FG', 'PI', 'BM', 'IM', 'OS', 'PM', 'RM', 'OX', 'NS'],PURCHASINGREPORTCODE1), 1, 0)) ~> transformation",
				"SelectRelevantColumns derive(PURCHASINGREPORTCODE1 = trim(PURCHASINGREPORTCODE1)) ~> TRIM",
				"UDC07, US3 join(SALESREPORTINGCODE3 == UserDefinedCodesS3@USERDEFINEDCODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> UDCS3",
				"UDCS3, U10 join(SALESREPORTINGCODE10 == UserDefinedCodes10@USERDEFINEDCODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> UDC10",
				"UDC10, UP1 join(PURCHASINGREPORTCODE1 == UserDefinedCodesP1@USERDEFINEDCODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> UDCP1",
				"UDCP1, US4 join(SALESREPORTINGCODE4 == UserDefinedCodesS4@USERDEFINEDCODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> UDCS4",
				"UDCS4, UP4 join(PURCHASINGREPORTCODE4 == UserDefinedCodesP4@USERDEFINEDCODE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> UDCP4",
				"USERDEFINEDCODEVALUES select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UserDefinedCodes10",
				"USERDEFINEDCODEVALUES select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UserDefinedCodesS4",
				"USERDEFINEDCODEVALUES select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UserDefinedCodesP1",
				"USERDEFINEDCODEVALUES select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UserDefinedCodesP4",
				"transformation derive(ACTUALSFILTER = iif(concat(toString(PRODUCTFILTER), toString(QUALITYGROUPFILTER)) == \"11\", 1, 0),",
				"          PLANNINGFILTER = iif(concat(toString(PRODUCTFILTER), toString(QUALITYGROUPFILTER), toString(STOCKINGTYPEFILTER), toString(COMMODITYCLASSFILTER)) == \"1111\", 1, 0)) ~> transformation2",
				"transformation2 select(mapColumn(",
				"          SHORTITEMID = IDENTIFIERSHORTITEM,",
				"          PRODUCTID = IDENTIFIER2NDITEM,",
				"          PRODUCT = DESCRIPTIONLINE1,",
				"          SECONDPRODUCT = DESCRIPTIONLINE2,",
				"          SEARCHTEXT,",
				"          PRODUCTTYPEID = SALESREPORTINGCODE3,",
				"          ACTIVEINGREDIENTID = SALESREPORTINGCODE4,",
				"          MANUFACTURINGFAMILYID = SALESREPORTINGCODE7,",
				"          QUALITYGROUPID = SALESREPORTINGCODE10,",
				"          COMMODITYCLASSID = PURCHASINGREPORTCODE1,",
				"          MASTERPLANNINGFAMILYID = PURCHASINGREPORTCODE4,",
				"          DISPATCHGROUPID = DISPATCHGRP,",
				"          UOMPRIMARYID = UNITOFMEASUREPRIMARY,",
				"          UOMSECONDARYID = UNITOFMEASURESECONDARY,",
				"          GLCLASS = GLCATEGORY,",
				"          STOCKTYPE = STOCKINGTYPE,",
				"          STRATEGICCATEGORY,",
				"          ISACTIVE,",
				"          MANUFACTURINGFAMILYUOMID,",
				"          PRODUCTTYPE,",
				"          ISSTERILE,",
				"          COMMODITYCLASS,",
				"          ACTIVEINGREDIENT,",
				"          MANUFACTURINGFAMILY,",
				"          QUALITYGROUP,",
				"          MASTERPLANNINGFAMILY,",
				"          PRODUCTFILTER,",
				"          QUALITYGROUPFILTER,",
				"          STOCKINGTYPEFILTER,",
				"          COMMODITYCLASSFILTER,",
				"          ACTUALSFILTER,",
				"          PLANNINGFILTER,",
				"          LAST_UPDATED_TS = SelectRelevantColumns@LAST_UPDATED_TS,",
				"          SRC_DELETED_FLG = SelectRelevantColumns@SRC_DELETED_FLG",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> renaming",
				"UserDefinedCodes07 filter(PRODUCTCODE==\"41\" && USERDEFINEDCODES ==\"07\") ~> U07",
				"UserDefinedCodesS3 filter(PRODUCTCODE==\"41\" && USERDEFINEDCODES ==\"S3\") ~> US3",
				"USERDEFINEDCODEVALUES select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UserDefinedCodes07",
				"USERDEFINEDCODEVALUES select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UserDefinedCodesS3",
				"UserDefinedCodesP4 filter(PRODUCTCODE==\"41\" && USERDEFINEDCODES ==\"10\") ~> UP4",
				"UserDefinedCodesP1 filter(PRODUCTCODE==\"41\" && USERDEFINEDCODES ==\"P1\") ~> UP1",
				"UserDefinedCodesS4 filter(PRODUCTCODE==\"41\" && USERDEFINEDCODES ==\"S4\") ~> US4",
				"UserDefinedCodes10 filter(PRODUCTCODE==\"41\" && USERDEFINEDCODES ==\"P4\") ~> U10",
				"renaming sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     schemaName: 'INT',",
				"     store: 'snowflake') ~> tmpDIMPRODUCT"
			]
		}
	}
}