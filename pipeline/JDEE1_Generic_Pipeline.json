{
	"name": "JDEE1_Generic_Pipeline_New",
	"properties": {
		"activities": [
			{
				"name": "Copy To Stage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup WaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set LastUpdate Column Var",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from @{pipeline().parameters.srcSchemaName}.@{pipeline().parameters.srcTableName} WHERE @{variables('lastModifiedDateColumn')}>'@{replace(string(activity('Lookup WaterMark').output.firstRow.lastLoad),'\"','')}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "TRUNCATE TABLE @{pipeline().parameters.stgSchemaName}.@{pipeline().parameters.stgTableName}",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Watermark",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureTable1",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.stgTableName",
								"type": "Expression"
							},
							"SchemaName": {
								"value": "@pipeline().parameters.stgSchemaName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lookup WaterMark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[getWaterMarkByDouble]",
						"storedProcedureParameters": {
							"schemaName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.baseSchemaName",
									"type": "Expression"
								}
							},
							"tableName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.baseTableName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Watermark",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy All Keys From Src",
				"description": "WorkAround for onpremise data, because we cannot use self-hosted integration runtime in dataflows",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set PrimaryKey Var",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select @{replace(replace(replace(replace(string(variables('srcPrimaryKey')),'\"',''),'[',''),']',''),'\\','')} from @{pipeline().parameters.srcSchemaName}.@{pipeline().parameters.srcTableName} ",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "AzureDataLakeStorage2",
							"type": "LinkedServiceReference"
						},
						"path": "staging"
					}
				},
				"inputs": [
					{
						"referenceName": "Watermark",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "JsonDeletedKeys",
						"type": "DatasetReference",
						"parameters": {
							"container": "staging",
							"folder": "JDEE1_DeletedKeys",
							"file": {
								"value": "@{pipeline().parameters.srcTableName}.json",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Updating Base Table",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy To Stage",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Copy All Keys From Src",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "JDEE1_Generic_DataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"primaryKeys": {
								"value": "@variables('srcPrimaryKey')",
								"type": "Expression"
							},
							"srcTableName": {
								"value": "'@{pipeline().parameters.srcTableName}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"StageTable": {
								"TableName": {
									"value": "@pipeline().parameters.stgTableName",
									"type": "Expression"
								},
								"SchemaName": {
									"value": "@pipeline().parameters.stgSchemaName",
									"type": "Expression"
								}
							},
							"ExistingBaseTable": {
								"TableName": {
									"value": "@pipeline().parameters.baseTableName",
									"type": "Expression"
								},
								"SchemaName": {
									"value": "@pipeline().parameters.baseSchemaName",
									"type": "Expression"
								}
							},
							"BaseTable": {
								"TableName": {
									"value": "@pipeline().parameters.baseTableName",
									"type": "Expression"
								},
								"SchemaName": {
									"value": "@pipeline().parameters.baseSchemaName",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine",
					"continuationSettings": {
						"customizedCheckpointKey": "ca326670-0934-4ddf-8250-2996c27a7995"
					}
				}
			},
			{
				"name": "Update WaterMark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Updating Base Table",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Lookup Max LastUpdate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateWatermarkByDouble]",
					"storedProcedureParameters": {
						"lastLoad": {
							"value": {
								"value": "@activity('Lookup Max LastUpdate').output.firstRow.LASTLOAD\n",
								"type": "Expression"
							},
							"type": "Double"
						},
						"schemaName": {
							"value": {
								"value": "@pipeline().parameters.baseSchemaName",
								"type": "Expression"
							},
							"type": "String"
						},
						"tableName": {
							"value": {
								"value": "@pipeline().parameters.baseTableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "JeffreySqlDb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup PrimaryKeys",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_getPrimaryKeys]",
						"storedProcedureParameters": {
							"schema_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.baseSchemaName",
									"type": "Expression"
								}
							},
							"table_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.baseTableName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Watermark",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Set PrimaryKey Var",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup PrimaryKeys",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "srcPrimaryKey",
					"value": {
						"value": "@split(activity('Lookup PrimaryKeys').output.firstRow.primaryKeys,',')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup LastUpdate Column",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_getLastUpdateColumn]",
						"storedProcedureParameters": {
							"schema_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.baseSchemaName",
									"type": "Expression"
								}
							},
							"table_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.baseTableName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Watermark",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Set LastUpdate Column Var",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup LastUpdate Column",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "lastModifiedDateColumn",
					"value": {
						"value": "@activity('Lookup LastUpdate Column').output.firstRow.LastUpdate_column",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup Max LastUpdate",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy To Stage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select MAX(@{variables('lastModifiedDateColumn')}) as lastLoad from @{pipeline().parameters.stgSchemaName}.@{pipeline().parameters.stgTableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Watermark",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"srcSchemaName": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"stgSchemaName": {
				"type": "string",
				"defaultValue": "STG_JDEE1"
			},
			"srcTableName": {
				"type": "string",
				"defaultValue": "F4101"
			},
			"stgTableName": {
				"type": "string",
				"defaultValue": "F4101"
			},
			"baseSchemaName": {
				"type": "string",
				"defaultValue": "SRC_JDEE1"
			},
			"baseTableName": {
				"type": "string",
				"defaultValue": "F4101"
			}
		},
		"variables": {
			"srcPrimaryKey": {
				"type": "Array",
				"defaultValue": [
					"IMITM"
				]
			},
			"lastModifiedDateColumn": {
				"type": "String",
				"defaultValue": "IMURAT"
			}
		},
		"folder": {
			"name": "Extraction/JD Edwards"
		},
		"annotations": [],
		"lastPublishTime": "2023-03-30T19:33:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}